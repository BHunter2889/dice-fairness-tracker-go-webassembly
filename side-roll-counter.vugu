<div class="side-roll-counter">
	<style vg-html='data.StyleContentString'></style>
	<div :class='fmt.Sprintf("pressed-%v", data.SideNumber)'>
		<span vg-html='data.SideNumber'></span>
	</div>
	<div class="container">
		<button class="count-decrement" @click="data.Decrement()" >
			<svg class="hexagon"><image xlink:href="assets/icons/minus.svg" class="hexagon"></image></svg>
		</button>
		<div class='roll-counter-count' type='text' vg-html='*data.Count'></div>
		<button class="count-increment" @click="data.Increment()" ></button>
	</div>

</div>

<style>
	.side-roll-counter:hover {
		/*box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);*/
		filter: drop-shadow(0 8px 5px black);
	}

	.side-roll-counter {
		/*box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);*/
		/*transition: 0.3s;*/
		/*!*width: auto;*!*/
		/*margin: 20px;*/
		/*position: relative;*/
		/*width: 81px;*/
		/*height: 95px;*/
		/*background: 50% transparent url(https://www.dndbeyond.com/Content/Skins/Waterdeep/images/character-sheet/content-frames/abilityscore.svg) no-repeat;*/
		/*background-size: contain;*/
		/*text-align: center;*/

		/* TODO: Decide whether this is better: */
		/*box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), inset 0 0 0 2000px rgba(255,255,255,0.1);*/
		transition: 0.3s;
		/* width: auto; */
		margin: 20px;
		position: relative;
		width: 81px;
		height: 95px;
		z-index: 100;
		background: 50% transparent url(https://www.dndbeyond.com/Content/Skins/Waterdeep/images/character-sheet/content-frames/abilityscore.svg) no-repeat;
		background-size: contain;
		text-align: center;
		filter: drop-shadow(1px 2px 2px black);
	}

	.container {
		padding: 2px 10%;
		display: flex;
		/*height: 75px;*/
		justify-content: space-between;
	}

	.roll-counter-count {
		position: absolute;
		font-weight: 700;
		left: 0;
		right: 0;
		bottom: 4px;
		font-size: 16px;
	}

	button {
		filter: drop-shadow(1px 1px 1px black);
	}

	button:hover {
		filter: drop-shadow(2px 2px 2px black);
	}

	button:active {
		filter: drop-shadow(0 0 1px black);
		transform: translateY(1px);
	}

	/*.count-decrement:hover {*/
		/*filter: drop-shadow(2px 2px 2px black);*/
	/*}*/

	.count-decrement {
		background-size: cover;
		position: relative;
		display: inline-block;
		background-image: url("assets/icons/minus.svg");
		background-repeat: no-repeat;
		background-position: center;
		background-color: transparent;
		color: transparent;
		border: 0;
		width: 25px;
		height: 25px;
		/*float: left;*/
		/*margin: 0 6px 0 0;*/
	}

	.count-decrement:after {
		left:0;
		border-bottom:17.7px transparent;
		border-left:17.7px transparent;
		transform:rotate(45deg) skew(19deg,19deg);
	}

	/*.count-decrement:hover, .count-increment:hover {*/
		/*box-shadow: 0 0 16px  rgba(0,0,0,0.24), 0 0 50px rgba(0,0,0,0.19);*/
	/*}*/

	.count-increment {
		background-size: cover;
		position: relative;
		display: inline-block;
		background-image: url("assets/icons/plus.svg");
		background-repeat: no-repeat;
		background-position: center;
		background-color: transparent;
		color: transparent;
		border: 0;
		width: 25px;
		height: 25px;
		/*float: right;*/
		/*margin: 0 0 0 6px;*/
	}

	/*TODO: Why doesn't this (with the button rule using it) not work??? */
	@keyframes ripple {
		0% {
			transform: scale(0, 0);
			opacity: 1;
		}
		20% {
			transform: scale(25, 25);
			opacity: 1;
		}
		100% {
			opacity: 0;
			transform: scale(40, 40);
		}
	}

	button:focus:not(:active)::after {
		animation: ripple 1s ease-out;
	}

	[class|="pressed"] {
		/*background: #333 url(//stephy.mccdgm.net/images/patterns/gray_sand.png);*/
		text-align: center;
		font-size: x-large;
	}

	[class|="pressed"] span {
		color: transparent;
		font-family: 'Oswald', sans-serif;
		position: relative;
		z-index: 0;
	}

	[class|="pressed"] span:before, [class|="pressed"] span:after {
		position: absolute;
		left: 0;
		color: #222; /* Fallback for non-webkit */
	}

	[class|="pressed"] span:before {
		z-index: 1;
		background: -webkit-linear-gradient(transparent, transparent),
		url(//stephy.mccdgm.net/images/patterns/dark_wall.png);
		background: -o-linear-gradient(transparent, transparent);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
	}

	[class|="pressed"] span:after {
		text-shadow: 0px 1px 2px rgba(255,255,255,0.2);
		z-index: -1;
	}

	.hexagon {
		width: 25px;
		height: 25px;
		position: relative;
		background-position: center;
	}
</style>